@model BanasVehicleTrackViewModel.Master.VehicleMasterViewModel
@{
    ViewBag.Title = "Vehicle Master";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .icon-input {
        position: relative;
    }

        .icon-input input {
            padding-right: 30px; /* Adjust the padding as needed */
        }

        .icon-input i {
            position: absolute;
            top: 50%;
            right: 10px; /* Adjust the right position as needed */
            transform: translateY(-50%);
            pointer-events: none;
            z-index: 1;
        }

    .Capalphanumber {
        font-size: 14px !important;
        border-radius: 2px !important;
        border: 1px solid #ccc !important;
        display: block;
        width: 100%;
        padding: 0.5rem 0.75rem;
        font-size: 1rem;
        line-height: 1.25;
        color: #495057;
        background-color: #fff;
        background-image: none;
        background-clip: padding-box;
        border: 1px solid rgba(0,0,0,.15);
        border-radius: 0.25rem;
        transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;
    }
</style>
<div class="page-wrapper">
    <div class="page-header">
        <div class="row align-items-end">
            <div class="col-lg-12">
                <div class="float-left">
                    <h3><i class="ti-control-forward ForwardIcon"> </i>Vehicle Master</h3>
                </div>
                <div class="float-right">
                    <a class="btn btn-outline-primary btn-round" href="@Url.Action("ViewVehicleMaster","Master")">
                        <i class="fa fa-eye mx-2"></i>View Vehicles
                    </a>
                </div>
            </div>
        </div>
    </div>

    <div class="page-body">
        <div class="row">
            <div class="col-sm-12">
                <div class="card">
                    <div class="card-block">
                        @using (Html.BeginForm("AddVehicleMaster", "Master", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken();

                            @Html.HiddenFor(m => m.Action)
                            @Html.HiddenFor(m => m.VehicleId, new { id = "txtVehicleId" })
                            <div class="form-group row">
                                <div class="col-sm-3">
                                    <label class="col-form-label">Vehicle Code</label>
                                    @Html.ValidationMessageFor(m => m.VehicleCode, "", new { @class = "text-danger" })
                                    @Html.TextBoxFor(m => m.VehicleCode, new Dictionary<string, object>() {
                                          {"id","txtVehicleCode"},
                                          {"class","form-control"},
                                             {"autocomplete","off"},
                                          {"required","required"},
                                          {"placeholder","Enter Vehicle Code"}
                                          })
                                </div>
                                <div class="col-sm-3">
                                    <label class="col-form-label">Vehicle Registration Number</label>
                                    @Html.ValidationMessageFor(m => m.VehicleRegNumber, "", new { @class = "text-danger" })
                                    @Html.TextBoxFor(m => m.VehicleRegNumber, new Dictionary<string, object>() {
                                          {"id","txtVehicleRegNumber"},
                                          {"class"," Capalphanumber VehicleNumber"},
                                             {"autocomplete","off"},
                                          {"required","required"},
                                          {"placeholder","Enter Vehicle Reg. Number"}
                                    })
                                </div>
                                <div class="col-sm-3">
                                    <label class="col-form-label">Vehicle Registration Date</label>
                                    @Html.ValidationMessageFor(m => m.VehicleRegDate, "", new { @class = "text-danger" })
                                    @Html.TextBoxFor(m => m.VehicleRegDate, new Dictionary<string, object>() {
                                          {"id","txtVehicleRegDate"},
                                          {"class","form-control FutureDisabledatepicker"},
                                             {"autocomplete","off"},
                                          {"required","required"},
                                          {"placeholder","Enter Vehicle Reg. Date"}
                                          })
                                </div>
                                <div class="col-sm-3">
                                    <label class="col-form-label">Vehicle Type</label>
                                    @Html.ValidationMessageFor(m => m.VehicleType, "", new { @class = "text-danger" })
                                    @Html.TextBoxFor(m => m.VehicleType, new Dictionary<string, object>() {
                                          {"id","txtVehicleType"},
                                          {"class","form-control"},
                                             {"autocomplete","off"},
                                          {"required","required"},
                                          {"placeholder","Enter Vehicle Type"}
                                          })
                                </div>
                                <div class="col-sm-3">
                                    <label class="col-form-label">Vehicle Company Name</label>
                                    @Html.ValidationMessageFor(m => m.VehicleMake, "", new { @class = "text-danger" })
                                    @Html.TextBoxFor(m => m.VehicleMake, new Dictionary<string, object>() {
                                          {"id","txtVehicleMake"},
                                          {"class","form-control"},
                                             {"autocomplete","off"},
                                          {"required","required"},
                                          {"placeholder","Enter Company Name"}
                                          })
                                </div>
                                <div class="col-sm-3">
                                    <label class="col-form-label">Vehicle Model Year</label>
                                    @Html.ValidationMessageFor(m => m.Model, "", new { @class = "text-danger" })
                                    @Html.TextBoxFor(m => m.Model, new Dictionary<string, object>() {
                                          {"id","txtModel"},
                                          {"class","form-control yearerror"},
                                             {"autocomplete","off"},
                                          {"required","required"},
                                          {"placeholder","Enter Vehicle Model Year"}
                                          })
                                </div>
                                <div class="col-sm-3">
                                    <label class="col-form-label">Vehicle Status</label>
                                    @Html.ValidationMessageFor(m => m.Status, "", new { @class = "text-danger" })
                                    @Html.TextBoxFor(m => m.Status, new Dictionary<string, object>() {
                                          {"id","txtStatus"},
                                          {"class","form-control"},
                                             {"autocomplete","off"},
                                          {"required","required"},
                                          {"placeholder","Enter Vehicle Status"}
                                          })
                                </div>
                                <div class="col-sm-3">
                                    <label class="col-form-label">Rate Per Km</label>
                                    @Html.ValidationMessageFor(m => m.RatePerKm, "", new { @class = "text-danger" })
                                    @Html.TextBoxFor(m => m.RatePerKm, new Dictionary<string, object>() {
                                          {"id","txtRatePerKm"},
                                          {"class","form-control numberdecimal"},
                                             {"autocomplete","off"},
                                          {"required","required"},
                                          {"placeholder","Enter Rate Per Km"}
                                          })
                                </div>
                                @*<div class="col-sm-3">
                                        <label class="col-form-label">Rate Effective Date</label>
                                        @Html.ValidationMessageFor(m => m.RateEffectiveDate, "", new { @class = "text-danger" })
                                        @Html.TextBoxFor(m => m.RateEffectiveDate, new Dictionary<string, object>() {
                                              {"id","txtRateEffectiveDate"},
                                              {"class","form-control datepicker"},
                                                 {"autocomplete","off"},
                                              {"required","required"},
                                              {"placeholder","Enter Rate Effective Date"}
                                              })
                                    </div>*@
                             
                                    <div class="col-sm-3">
                                        <label class="col-form-label">Department</label>
                                        @Html.ValidationMessageFor(m => m.DepartmentId, "", new { @class = "text-danger" })
                                        @Html.DropDownListFor(m => m.DepartmentId, new SelectList(Model.DepartmentList, "DepartmentId", "DepartmentName"), "Select Department",
                                                       new Dictionary<string, object>() {
                                                           {"id","ddlDepartmentId"},
                                                 {"onchange", "javascript:GetCenter(this.value)"},
                                                 { "class","form-control form-select js-example-disabled-results" } })
                                    </div>
                               
                                  
                                <div class="col-sm-3">
                                    <label class="col-form-label">Center</label>
                                    @Html.ValidationMessageFor(m => m.CenterId, "", new { @class = "text-danger" })
                                    @Html.DropDownListFor(x => x.CenterId, new SelectList(Model.CenterList, "CenterId", "CenterName"), "Select Center",
                                         new Dictionary<string, object>() {
                                             {"id","ddlCenter"},
                                             { "class","form-control form-select js-example-disabled-results" } })

                                </div>

                                <div class="col-sm-3">
                                    <label class="col-form-label">Insurance Commencement Date</label>
                                    @Html.ValidationMessageFor(m => m.InsuranceCommencementDate, "", new { @class = "text-danger" })
                                    @Html.TextBoxFor(m => m.InsuranceCommencementDate, new Dictionary<string, object>() {
                                          {"id","txtInsuranceCommencementDate"},
                                          {"class","form-control datepicker"},
                                             {"autocomplete","off"},
                                          {"required","required"},
                                          {"placeholder","Enter Insurance Commencement Date"}
                                          })

                                </div>

                                <div class="col-sm-3">
                                    <label class="col-form-label">Insurance Expiry Date</label>
                                    @Html.ValidationMessageFor(m => m.InsuranceExpiryDate, "", new { @class = "text-danger" })


                                    @Html.TextBoxFor(m => m.InsuranceExpiryDate, new Dictionary<string, object>() {
                                          {"id","txtInsuranceExpiryDate"},
                                          {"class","form-control datepicker"},
                                             {"autocomplete","off"},
                                          {"required","required"},
                                          {"placeholder","Enter Insurance Expiry Date"}
                                          })


                                </div>
                                <div class="col-sm-3">
                                    <label class="col-form-label">Contract Start Date</label>
                                    @Html.ValidationMessageFor(m => m.ContractStartDate, "", new { @class = "text-danger" })
                                    @Html.TextBoxFor(m => m.ContractStartDate, new Dictionary<string, object>() {
                                          {"id","txtContractStartDate"},
                                          {"class","form-control datepicker"},
                                             {"autocomplete","off"},
                                          {"required","required"},
                                          {"placeholder","Enter Contract Start Date"}
                                          })
                                </div>
                                <div class="col-sm-3">
                                    <label class="col-form-label">Contract End Date</label>
                                    @Html.ValidationMessageFor(m => m.ContractEndDate, "", new { @class = "text-danger" })
                                    @Html.TextBoxFor(m => m.ContractEndDate, new Dictionary<string, object>() {
                                          {"id","txtContractEndDate"},
                                          {"class","form-control datepicker"},
                                             {"autocomplete","off"},
                                          {"required","required"},
                                          {"placeholder","Enter Contract End Date"}
                                          })
                                </div>
                                <div class="col-sm-3">
                                    <label class="col-form-label">Contractor Company List</label>
                                    @Html.ValidationMessageFor(m => m.ContractorId, "", new { @class = "text-danger" })
                                    @Html.DropDownListFor(m => m.ContractorId, new SelectList(Model.ContractorMasterList.OrderBy(m => m.ContractorCompanyName), "ContractorId", "ContractorCompanyName"), "Select Contractor Company",
                                             new Dictionary<string, object>() {
                                                 {"id","ddlContractorid"},
                                                {"onchange", "javascript:GetContCompWiseConName(this.value)"},
                                                 { "class","form-control form-select js-example-disabled-results"}
                                                 })
                                </div>
                                <div class="col-sm-3">
                                    <label class="col-form-label">Contractor Name</label>
                                    @Html.TextBoxFor(m => m.ContractorName, new Dictionary<string, object>() {
                                          {"id","txtContractorName"},
                                          {"class","form-control"},
                                             {"autocomplete","off"},
                                             {"readonly","readonly"},
                                          })
                                </div>
                                <div class="col-sm-3">
                                    <label class="col-form-label">Contractor Code</label>
                                    @Html.TextBoxFor(m => m.ContractorCode, new Dictionary<string, object>() {
                                          {"id","txtContractorCode"},
                                          {"class","form-control"},
                                             {"autocomplete","off"},
                                             {"readonly","readonly"},
                                          })
                                </div>
                                <div class="col-sm-3">
                                    <label class="col-form-label">Contractor Contact No</label>
                                    @Html.TextBoxFor(m => m.ContractorContactNo, new Dictionary<string, object>() {
                                          {"id","txtContractorContactNo"},
                                          {"class","form-control"},
                                             {"autocomplete","off"},
                                             {"readonly","readonly"},
                                          })
                                </div>
                                <div class="col-sm-3">
                                    <label class="col-form-label">Contract End Date</label>
                                    @Html.ValidationMessageFor(m => m.ContractEndDate, "", new { @class = "text-danger" })
                                    @Html.TextBoxFor(m => m.ContractEndDate, new Dictionary<string, object>() {
                                          {"id","txtContractEndDate"},
                                          {"class","form-control datepicker"},
                                             {"autocomplete","off"},
                                          {"required","required"},
                                          {"placeholder","Enter Contract End Date"}
                                          })
                                </div>
                                <div class="col-sm-3">
                                    <label class="col-form-label">IsActive</label>

                                    @Html.ValidationMessageFor(m => m.IsActive, "", new { @class = "text-danger" })
                                    @Html.DropDownListFor(x => x.IsActive, new List<SelectListItem>
                                   {
                                       new SelectListItem{ Text="Enable", Value = "true",Selected=true },
                                       new SelectListItem{ Text="Disable", Value = "false" }
                                    }, new { @class = "form-control form-select js-example-disabled-results", @id = "IsActive" })
                                </div>
                                <div class="col-lg-3">
                                    <div class="mt-4">
                                        <input type="submit" class="btn btn-round btn-inverse m-2" id="confirmok" value="@Model.Action" onclick="return confirm('Are You sure you want to save data?')" />

                                        @if (Model.Action == "Save")
                                        {
                                            <input type="button" class="btn btn btn-round btn-inverse m-2" id="reload" value="Refresh" />
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $('#reload').click(function () {

        window.location.href = "/Master/AddVehicleMaster";
    });
</script>

<script>
    @*$(document).ready(function () {
        var action = "@ViewBag.Action";

        if (action === "Update") {
            $("#txtVehicleCode").prop("readonly", true);
        }
        var inputElement = $(".VehicleNumber");

        $(".VehicleNumber").inputmask({
            mask: "AA-99-AA-9999",
            greedy: false,
            definitions: {
                "A": {
                    validator: "[A-Za-z]",
                },
                "9": {
                    validator: "[0-9]",
                },
            },
        });

        inputElement.on("input", function (event) {
            var value = inputElement.val().toUpperCase();
            var position = inputElement[0].selectionStart;

            if (position === 3 && value.length >= 2) {
                position = 6; // Move cursor to the sixth position
            } else if (position === 6 && value.length >= 5) {
                position = 9; // Move cursor to the ninth position
            }

            // Update the input value and cursor position
            inputElement.val(value);
            inputElement[0].setSelectionRange(position, position);
        });
    });*@
</script>
<script>
    $(document).ready(function () {
        var formattedCurrentDate = '31-12-2999';
        var selectedDate = null;

        $('#txtInsuranceCommencementDate').Zebra_DatePicker({
            format: 'd-m-Y', show_select_today: false,
            direction: false,
            onSelect: function (date) {
                selectedDate = date;

            }
        });
        $('#txtInsuranceExpiryDate').Zebra_DatePicker({
            format: 'd-m-Y',
            onOpen: function () {
                debugger
                if (selectedDate != null) {
                    var direction = [selectedDate, formattedCurrentDate];

                }
                $('#txtInsuranceExpiryDate').data('Zebra_DatePicker').update({
                    direction: direction
                });

            }
        });


        $('#txtContractStartDate').Zebra_DatePicker({
            format: 'd-m-Y', show_select_today: false,
            direction: false,
            onSelect: function (date) {
                selectedDate = date;

            }
        });
        $('#txtContractEndDate').Zebra_DatePicker({
            format: 'd-m-Y',
            onOpen: function () {
                debugger
                if (selectedDate != null) {
                    var direction = [selectedDate, formattedCurrentDate];

                }
                $('#txtContractEndDate').data('Zebra_DatePicker').update({
                    direction: direction
                });

            }
        });

        //$('#Zebra_DatePicker_Icon').on('click', function () {
        //    $('#txtInsuranceExpiryDate').Zebra_DatePicker('show');
        //});
    });
     function GetContCompWiseConName(_ContractorId) {
        if (_ContractorId != 0 ) {
            var url = "@System.Configuration.ConfigurationManager.AppSettings["myKey"]" + "/Master/SelectContCompWiseConNameJson";

            $.ajax({
                url: url,
                data: { ddlContractorId: _ContractorId  } ,
                cache: false,
                type: "POST",
                datatype: "json",
                traditional: true,

                success: function (data) {
                    var contractor = data.Contractorlist[0]; // Assuming there is only one contractor in the list

                    // Set the values to the textboxes
                    $("#txtContractorName").val(contractor.ContractorName);
                    $("#txtContractorCode").val(contractor.ContractorCode);
                    $("#txtContractorContactNo").val(contractor.Contactno);
                },
                error: function (reponse) {
                    // Set the values to the textboxes
                    $("#txtContractorName").val("");
                    $("#txtContractorCode").val("");
                    $("#txtContractorContactNo").val("");
                }
            });
        }
        else {
            // Set the values to the textboxes
            $("#txtContractorName").val("");
            $("#txtContractorCode").val("");
            $("#txtContractorContactNo").val("");
        }
    }
</script>
<script>
       function GetCenter(_DepartmentId) {
        $("#ddlCenter option").remove();
        if (_DepartmentId == "") {
            _DepartmentId = 0;
        }
        if (_DepartmentId != 0 ) {
            var url = "@System.Configuration.ConfigurationManager.AppSettings["myKey"]" + "/Master/SelectDepartmentWiseCenterJson";

            $.ajax({
                url: url,
                data: { ddlDepartmentId: _DepartmentId  } ,
                cache: false,
                type: "POST",
                datatype: "json",
                traditional: true,
                success: function (data) {
                    var page = "<select id='ddlCenter'>";
                    page = page + '<option value="">Select Center</option>';
                    for (var i = 0; i < data.CenterList.length; i++) {
                        page = page + '<option value=' + data.CenterList[i].CenterId + '>' + data.CenterList[i].CenterName + '</option>';
                    }
                    page = page + '</select>';
                    $('#ddlCenter').html(page);
                },
                error: function (reponse) {
                    var page = "<select id='ddlCenter'>";
                    page = page + '<option value="">Select Center</option>';
                    page = page + '</select>';
                    $('#ddlCenter').html(page);
                }
            });
        }
        else {
            var page = "<select id='ddlCenter'>";
            page = page + '<option value="">Select Center</option>';
            page = page + '</select>';
            $('#ddlCenter').html(page);
        }
    }
</script>