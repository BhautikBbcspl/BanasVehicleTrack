@model BanasVehicleTrackViewModel.AuditorDepartment.AuditorFinalApproveViewModel
@{
    ViewBag.Title = "AuditorFinalApprove";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .red-background {
        background-color: #eb3422;
        color: #fff;
    }
</style>
<div class="page-header">
    <div class="row align-items-end">
        <div class="col-lg-12">
            <div class="float-left">
                <h3><i class="ti-control-forward ForwardIcon"> </i>Auditor Final Approve</h3>
            </div>
            <div class="float-right">
            </div>
        </div>

    </div>
</div>

<div class="page-wrapper">
    <div class="card">
        <div class="card-block">
            <div class="dt-responsive">
                @using (Html.BeginForm("AuditorFinalApprove", "AuditorDepartment", FormMethod.Post, new { id = "AuditorDashboardForm" }))
                {
                    @Html.AntiForgeryToken();

                    <div class="form-group row">
                        <div class="col-sm-3">
                            <label class="col-form-label">From Date</label><br />
                            @Html.TextBoxFor(m => m.VisitDateTime, new Dictionary<string, object>() {
                                                               {"id","txtVisitDateTime"},
                                                               {"class","form-control datepicker"},
                                                                  {"autocomplete","off"},
                                                               })
                        </div>
                        <div class="col-sm-3">
                            <label class="col-form-label">To Date</label><br />
                            @Html.TextBoxFor(m => m.CloseDateTime, new Dictionary<string, object>() {
                                                               {"id","txtCloseDateTime"},
                                                               {"class","form-control datepicker"},
                                                                  {"autocomplete","off"},
                                                               })
                        </div>

                        <div class="col-sm-3">
                            <label class="col-form-label">Department</label><br />
                            @Html.DropDownListFor(m => m.DepartmentId, new SelectList(Model.DepartmentMasterList, "DepartmentId", "DepartmentName"), "Select Department",
                                        new Dictionary<string, object>() {
                                            {"id","ddlDepartmentId"},
                                            {"onchange", "javascript:GetVehicle(this.value)"},
                                            { "class","form-control form-select js-example-disabled-results"}
                                            })

                        </div>

                        <div class="col-sm-3">
                            <label class="col-form-label">Vehicle Reg Number</label><br />
                            @Html.DropDownListFor(m => m.VehicleId, new SelectList(Model.VehicleMasterList, "VehicleId", "VehicleRegNumber"), "Select Vehicle",
                                        new Dictionary<string, object>() {
                                            {"id","ddlVehicleId"},
                                            { "class","form-control form-select js-example-disabled-results"}
                                            })

                        </div>

                        <div class="col-lg-3">
                            <div class="mt-4">
                                <input type="submit" class="btn btn-round btn-inverse m-2" value="View" />
                            </div>
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
</div>

<div class="page-wrapper">
    <div class="card">
        <div class="card-block">
            <div class="dt-responsive">
                <table id="base-style" class="table table-striped table-hover table-bordered nowrap table-responsive" width="100%">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayName("Gate Pass Status")
                            </th>
                            <th>
                                @Html.DisplayName("GatePass Id")
                            </th>
                            <th>
                                @Html.DisplayName("User Code")
                            </th>
                            <th>
                                @Html.DisplayName("User Name")
                            </th>
                            <th>
                                @Html.DisplayName("Department")
                            </th>
                            <th>
                                @Html.DisplayName("Center")
                            </th>
                            <th>
                                @Html.DisplayName("Vehicle Reg Number")
                            </th>
                            <th>
                                @Html.DisplayName("Trip km by User")
                            </th>
                            <th>
                                @Html.DisplayName("Trip km by Security")
                            </th>
                            <th>
                                @Html.DisplayName("Start km by User")
                            </th>
                            <th>
                                @Html.DisplayName("End km by User")
                            </th>
                            <th>
                                @Html.DisplayName("Start km by Security")
                            </th>
                            <th>
                                @Html.DisplayName("End km by Security")
                            </th>
                            <th>
                                @Html.DisplayName("km Difference")
                            </th>
                            <th>
                                @Html.DisplayName("Arrival Security Name")
                            </th>
                            <th>
                                @Html.DisplayName("Arrival Security Code")
                            </th>

                            @*<th>
                                    @Html.DisplayName("OtherUser1")
                                </th>
                                <th>
                                    @Html.DisplayName("OtherUser2")
                                </th>
                                <th>
                                    @Html.DisplayName("OtherUser3")
                                </th>*@
                            <th>
                                @Html.DisplayName("Information Mode")
                            </th>
                            <th>
                                @Html.DisplayName("Visit DateTime")
                            </th>
                            <th>
                                @Html.DisplayName("Visit Purpose")
                            </th>
                            <th>
                                @Html.DisplayName("Remarks")
                            </th>
                            <th>
                                @Html.DisplayName("Driver")
                            </th>
                            <th>
                                @Html.DisplayName("Vehicle Code")
                            </th>
                            <th>
                                @Html.DisplayName("Rate/km")
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.BanasVehicleGatepassRetrieveList)
                        {
                            <tr>
                                <td>
                                    @if (item.GatePassStatus == 1)
                                    {
                                        <label class="text-success">Open</label>
                                    }
                                    else
                                    {
                                        <label class="text-danger">Close</label>
                                    }
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.GatePassId)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.UserCode)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Username)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DepartmentName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Center)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.VehicleRegNumber)
                                </td>
                                <td>
                                    <input type="checkbox" class="chk1" name="selectedDifference" data-record-type="GatePass" data-record-value="@item.Difference" data-record-id="@item.GatePassId" />
                                    @Html.DisplayFor(modelItem => item.Difference)
                                </td>
                                <td>
                                    <input type="checkbox" class="chk1" name="selectedDepArrDifference" data-record-type="Security" data-record-value="@item.DepArrDifference" data-record-id="@item.GatePassId" />
                                    @Html.DisplayFor(modelItem => item.DepArrDifference)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.StartOdometer)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CloseOdometer)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.StartKm)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.EndKm)
                                </td>
                                <td class="@(item.TotalDifference > 5 ? "red-background" : "")">
                                    @Html.DisplayFor(modelItem => item.TotalDifference)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ArrivalSecurityName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ArrivalSecurityCode)
                                </td>
                                @*<td>
                                        @Html.DisplayFor(modelItem => item.OtherUser1)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.OtherUser2)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.OtherUser3)
                                    </td>*@
                                <td>
                                    @Html.DisplayFor(modelItem => item.InformationMode)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.VisitDateTime)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.VisitPurpose)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Remarks)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Driver)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.VehicleCode)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.RatePerKm)

                                </td>

                            </tr>
                        }

                    </tbody>
                </table>
            </div>
            <button class="float-right btn btn-round btn-inverse mt-4" onclick="confirmok()">Approve Selected</button>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        var currentDate = new Date(); // Get the current date

        var formattedCurrentDate = currentDate.getDate() + '-' + (currentDate.getMonth() + 1) + '-' + currentDate.getFullYear();
        var selectedDate = null;
        $('#txtVisitDateTime').Zebra_DatePicker({
            format: 'd-m-Y',
            direction: false,
            disabled_dates: ['*+' + currentDate.getMonth() + 'm+1d-*'],
            onSelect: function (date) {
                selectedDate = date;

            }
        });
        $('#txtCloseDateTime').Zebra_DatePicker({
            format: 'd-m-Y',
            direction: false,
            disabled_dates: ['*+' + currentDate.getMonth() + 'm+1d-*'],
            onOpen: function () {
                debugger
                if (selectedDate != null) {
                    var direction = [selectedDate, formattedCurrentDate];

                }
                $('#txtCloseDateTime').data('Zebra_DatePicker').update({
                    direction: direction
                });

            }
        });
        $('#Zebra_DatePicker_Icon').on('click', function () {
            $('#txtCloseDateTime').Zebra_DatePicker('show');
            //$('#fromDate').Zebra_DatePicker('show');
        });
    });


    $('.chk1').on('change', function () {
        if ($(this).is(':checked')) {
            // Uncheck other checkboxes in the same row
            $(this).closest('tr').find('.chk1').not(this).prop('checked', false);
        }
    });

       function GetVehicle(_DepartmentId) {
        $("#ddlVehicleId option").remove();
        if (_DepartmentId == "") {
            _DepartmentId = 0;
        }
        if (_DepartmentId != 0 ) {
            var url = "@System.Configuration.ConfigurationManager.AppSettings["myKey"]" + "/AuditorDepartment/SelectDepartmentWiseVehicleJson";

            $.ajax({
                url: url,
                data: { ddlDepartment: _DepartmentId  } ,
                cache: false,
                type: "POST",
                datatype: "json",
                traditional: true,
                success: function (data) {
                    debugger
                    var page = "<select id='ddlVehicleId'>";
                    page = page + '<option value="">Select Vehicle</option>';
                    for (var i = 0; i < data.VehicleList.length; i++) {
                        page = page + '<option value=' + data.VehicleList[i].VehicleId + '>' + data.VehicleList[i].VehicleRegNumber + '</option>';
                    }
                    page = page + '</select>';
                    $('#ddlVehicleId').html(page);
                },
                error: function (reponse) {
                    var page = "<select id='ddlVehicleId'>";
                    page = page + '<option value="">Select Vehicle</option>';
                    page = page + '</select>';
                    $('#ddlVehicleId').html(page);
                }
            });
        }
        else {
            var page = "<select id='ddlVehicleId'>";
            page = page + '<option value="">Select Vehicle</option>';
            page = page + '</select>';
            $('#ddlVehicleId').html(page);
        }
    }

    function sel() {
        var selectedIds = [];
        var selectedValues = [];
        var selectedTypes = [];

        $('#base-style').DataTable().rows().every(function () {
            var rows = this.nodes().to$();
            rows.find("input[name='selectedDepArrDifference']:checked").each(function () {
                var recordId = $(this).data('record-id');
                var recordValue = $(this).data('record-value');
                var recordType = $(this).data('record-type');
                selectedIds.push(recordId);
                selectedValues.push(recordValue);
                selectedTypes.push(recordType);
            });

            rows.find("input[name='selectedDifference']:checked").each(function () {
                var recordId = $(this).data('record-id');
                var recordValue = $(this).data('record-value');
                var recordType = $(this).data('record-type');
                selectedIds.push(recordId);
                selectedValues.push(recordValue);
                selectedTypes.push(recordType);
            });
        });

        return {
            ids: selectedIds,
            values: selectedValues,
            types: selectedTypes
        };
    }

    function confirmok() {
        if (confirm('Are you sure you want to Allocate?')) {
            ApproveDifferenceSave();
            return true;
        } else {
            return false;
        }
    }

    function ApproveDifferenceSave() {
        var selectedData = sel();

        var dataToSend = [];

        for (var i = 0; i < selectedData.ids.length; i++) {
            var item = {
                Id: selectedData.ids[i].toString(),
                Value: selectedData.values[i],
                Type: selectedData.types[i]
            };
            dataToSend.push(item);
        }
        $.ajax({
            url: "@System.Configuration.ConfigurationManager.AppSettings["myKey"]" +"/AuditorDepartment/ApproveDifferenceSave",
            type: "POST",
            data: { dataToSend: dataToSend },
            success: function (result) {
                var msg = "<div class='alert alert-success background-success'>Selected records are approved</div>"
                $(".msg").html(msg);
                window.setTimeout(function () {
                    $(".alert").fadeTo(2000, 0).slideUp(2000, function () {
                        $(this).remove();
                    });
                }, 2000);
                setTimeout(function () {
                    window.location.href = "/AuditorDepartment/AuditorFinalApprove";
                }, 2000);
            },
            error: function (xhr, status, error) {
                var result = "<div class='alert alert-danger background-danger'>Records not approved</div>"
                $(".msg").html(result);
                window.setTimeout(function () {
                    $(".alert").fadeTo(2000, 0).slideUp(2000, function () {
                        $(this).remove();
                    });
                }, 2000);
            }
        });
    };
</script>