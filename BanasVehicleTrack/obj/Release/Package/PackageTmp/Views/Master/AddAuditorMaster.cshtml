@model BanasVehicleTrackViewModel.Master.AuditorMasterViewModel@{ ViewBag.Title = "Auditor Master";    Layout = "~/Views/Shared/_Layout.cshtml";}<style>    .field-icon {        float: right;        margin-top: -24px;        position: relative;        right: 15px;        z-index: 2;    }</style><div class="page-wrapper">    <div class="page-header">        <div class="row align-items-end">            <div class="col-lg-12">                <div class="float-left">                    <h3><i class="ti-control-forward ForwardIcon"> </i>Auditor Master</h3>                </div>                <div class="float-right">                    <a class="btn btn-outline-primary btn-round" href="@Url.Action("ViewAuditorMaster","Master")">                        <i class="fa fa-eye mx-2"></i>View Auditors                    </a>                </div>            </div>        </div>    </div>    <div class="page-body">        <div class="row">            <div class="col-sm-12">                <div class="card">                    <div class="card-block">                        @using (Html.BeginForm("AddAuditorMaster", "Master", FormMethod.Post, new { enctype = "multipart/form-data" }))                        {            @Html.AntiForgeryToken();@Html.HiddenFor(m => m.Action)                @Html.HiddenFor(m => m.AuditorId, new { id = "txtAuditorId" })                        <div class="form-group row">                            <div class="col-sm-3">                                <label class="col-form-label">Auditor Code</label>                                @Html.ValidationMessageFor(m => m.AuditorCode, "", new { @class = "text-danger" })                                @Html.TextBoxFor(m => m.AuditorCode, new Dictionary<string, object>() {                                          {"id","txtAuditorCode"},                                          {"class","form-control"},                                             {"autocomplete","off"},                                          {"placeholder","Enter Auditor Code"}                                          })                            </div>                            <div class="col-sm-3">                                <label class="col-form-label">Password</label>                                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })                                @Html.TextBoxFor(m => m.Password, new Dictionary<string, object>() {                                          {"id","txtPassword"},                                          {"class","form-control"},                                             {"autocomplete","off"},                                          {"placeholder","Enter Auditor Password"}                                          })                                <span toggle="#password-field" class="fa fa-fw fa-eye field-icon toggle-password"></span>                            </div>                            <div class="col-sm-3">                                <label class="col-form-label">Auditor Name</label>                                @Html.ValidationMessageFor(m => m.AuditorName, "", new { @class = "text-danger" })                                @Html.TextBoxFor(m => m.AuditorName, new Dictionary<string, object>() {                                          {"id","txtAuditorName"},                                          {"class","form-control"},                                             {"autocomplete","off"},                                          {"required","required"},                                          {"placeholder","Enter Auditor Officer Name"}                                          })                            </div>                            <div class="col-sm-3">                                <label class="col-form-label">Auditor Signature</label>                                @Html.ValidationMessageFor(m => m.AuditorSignature, "", new { @class = "text-danger" })                                @if (!string.IsNullOrEmpty(Model.AuditorSignature))                                {                        <input type="file" name="EditSignature" id="filer_input_single" accept=".jpg, .jpeg, .png">                                            <h6 class="font-weight-bold">@Model.SignatureName</h6>                                                                @Html.HiddenFor(m => m.AuditorSignature) }                                                            else                                                            {                                            <input type="file" name="AuditorSignature" id="filer_input_single" accept=".jpg, .jpeg, .png" required>}                            </div>                            <div class="col-sm-3">                                <label class="col-form-label">IsActive</label>                                @Html.ValidationMessageFor(m => m.IsActive, "", new { @class = "text-danger" })                                @Html.DropDownListFor(x => x.IsActive, new List<SelectListItem>                                                                                                                                           {                                       new SelectListItem{ Text="Enable", Value = "true",Selected=true },                                       new SelectListItem{ Text="Disable", Value = "false" }                                    }, new { @class = "form-control form-select js-example-disabled-results", @id = "IsActive" })                            </div>                            <div class="col-lg-3">                                <div class="mt-4">                                    <input type="submit" class="btn btn-round btn-inverse m-2" id="confirmok" value="@Model.Action" onclick="return confirm('Are You sure you want to save data?')" />                                    @if (Model.Action == "Save")                                    {                        <input type="button" class="btn btn btn-round btn-inverse m-2" id="reload" value="Refresh" />}                                </div>                            </div>                        </div>}                    </div>                </div>            </div>        </div>    </div></div><script>    $(document).ready(function () {        debugger        var action = "@ViewBag.Action";        if (action === "update") {            $("#txtAuditorCode").prop("readonly", true);        }    });</script><script>    $('#reload').click(function () {        window.location.href = "/Master/AddAuditorMaster";    });</script><script>    $(".toggle-password").click(function () {        debugger        $(this).toggleClass("fas fa-eye-slash");        input = $(this).parent().find("input");        if (input.attr("type") == "password") {            input.attr("type", "text");        } else {            input.attr("type", "password");        }    });</script>