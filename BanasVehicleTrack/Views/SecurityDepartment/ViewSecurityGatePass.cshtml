@model BanasVehicleTrackViewModel.SecurityDepartment.SecurityVisitMgmtViewModel
@{
    ViewBag.Title = "Security Department Visit Management";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="page-header">
    <div class="row align-items-end">
        <div class="col-lg-12">
            <div class="float-left">
                <h3><i class="ti-control-forward ForwardIcon"> </i>Gate Pass List</h3>
            </div>
            <div class="float-right">

            </div>
        </div>

    </div>
</div>

<div class="page-body">
    <div class="row">
        <div class="col-sm-12">
            <div class="card">
                <div class="card-header">

                    <div class="card-header-right">
                        <a class="btn btn-outline-primary" href="@Url.Action("SecurityVisitMgmtDashboard","SecurityDepartment")">
                            <i class="fa fa-backward"></i>Back
                        </a>
                    </div>

                </div>
                @foreach (var item in Model.GatePassList)
                {
                    <div class="row">
                        <div class="col-md-6">
                            <div class="card-block">
                                <h4 class="sub-title">Visit Details</h4>
                                <div class="form-group row">
                                    <label class="col-sm-4 col-form-label">GatePass Id</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control" value="@item.GatePassId" readonly="">
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-sm-4 col-form-label">Department</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control" value="@item.DepartmentName" readonly="">
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-sm-4 col-form-label">User Code</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control" value="@item.UserCode" readonly="">
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-sm-4 col-form-label">User Name</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control" value="@item.Username" readonly="">
                                    </div>
                                </div>
                                @*<div class="form-group row">
            <label class="col-sm-4 col-form-label">Other User 1</label>
            <div class="col-sm-8">
                <input type="text" class="form-control" value="@item.OtherUser1" readonly="">
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-4 col-form-label">Other User 2</label>
            <div class="col-sm-8">
                <input type="text" class="form-control" value="@item.OtherUser2" readonly="">
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-4 col-form-label">Other User 3</label>
            <div class="col-sm-8">
                <input type="text" class="form-control" value="@item.OtherUser3" readonly="">
            </div>
        </div>*@
                                <div class="form-group row">
                                    <label class="col-sm-4 col-form-label">Information Mode</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control" value="@item.InformationMode" readonly="">
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-sm-4 col-form-label">Visit Date & Time</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control" value="@item.VisitDateTime" readonly="">
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-sm-4 col-form-label">Visit Purpose</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control" value="@item.VisitPurpose" readonly="">
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-sm-4 col-form-label">Remarks</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control" value="@item.Remarks" readonly="">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="card-block">
                                <h4 class="sub-title">Vehicle Details</h4>
                                <div class="form-group row">
                                    <label class="col-sm-4 col-form-label">GatePass Status</label>
                                    <div class="col-sm-8">
                                        @if (item.GatePassStatus == 1)
                                        {
                                            <input type="text" class="form-control bg-success" value="Open" readonly="">
                                        }
                                        else
                                        {
                                            <input type="text" class="form-control" value="Close" readonly="">
                                        }
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-sm-4 col-form-label">
                                        Center
                                    </label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control" value="@item.Center" readonly="">
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-sm-4 col-form-label">Driver</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control" value="@item.Driver" readonly="">
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-sm-4 col-form-label">Vehicle Code</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control" value="@item.VehicleCode" readonly="">
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-sm-4 col-form-label">Vehicle Reg Number</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control" value="@item.VehicleRegNumber" readonly="">
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-sm-4 col-form-label">Start Odometer</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control" value="@decimal.Parse(item.StartOdometer.ToString()).ToString("0.0")" readonly="">
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-sm-4 col-form-label">CloseOdometer</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control" value="@item.CloseOdometer" readonly="">
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-sm-4 col-form-label">Close Remark</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control" value="@item.CloseRemark" readonly="">
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="col-sm-4 col-form-label">Close DateTime</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control" value="@item.CloseDateTime" readonly="">
                                    </div>
                                </div>

                                <div class="form-group row">
                                    <label class="col-sm-4 col-form-label">Netkm</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control" value="@item.Netkm" readonly="">
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>

                    <div class="row">
                        @*@if (Model.DepartureVerifyStatus == null && Model.ArrivalVerifyStatus == null || Model.DepartureVerifyStatus == "" && Model.ArrivalVerifyStatus == "")*@
                        @if (Model.DepartureVerifyStatus == false && Model.ArrivalVerifyStatus == false)
                        {

                            <div class="col-md-6">
                                <div class="card-block">
                                    @using (Html.BeginForm("AddSecurityGatePass", "SecurityDepartment", FormMethod.Post))
                                    {
                                        @Html.AntiForgeryToken();

                                        @*@Html.HiddenFor(m => m.DepartureVerifyStatus)*@
                                        @Html.HiddenFor(m => m.ArrivalVerifyStatus)
                                        @Html.HiddenFor(m => m.GatePassId)
                                        <h4 class="sub-title">Departure Details</h4>
                                        <div class="form-group row">
                                            <label class="col-sm-4 col-form-label">
                                                Departure Date and Time
                                                @Html.ValidationMessageFor(m => m.DepartureDateTime, "", new { @class = "text-danger" })
                                            </label>
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.DepartureDateTime, new Dictionary<string, object>() {
                                            {"id","txtDepartureDateTime"},
                                            {"class","form-control datetimepicker"},
                                               {"autocomplete","off"},
                                            {"required","required"},
                                            {"placeholder","Enter Departure Date Time"}
                                            })
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label class="col-sm-4 col-form-label">Start KM @Html.ValidationMessageFor(m => m.StartKm, "", new { @class = "text-danger" })</label>
                                     
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.StartKm, new Dictionary<string, object>() {
                                             {"id","txtStartKm"},
                                             {"class","form-control"},
                                                {"autocomplete","off"},
                                             {"required","required"},
                                             {"placeholder","Enter Start Km"}
                                             })
                                            </div>

                                        </div>
                                        <div class="form-group row">
                                            <label class="col-sm-4 col-form-label">Security Officer Name</label>
                                            <div class="col-sm-8">
                                                @Html.DropDownListFor(m => m.DepartureSecurityId, new SelectList(Model.SecurityMasterList.OrderBy(m => m.SecurityName), "SecurityId", "SecurityName"), "Select Security",
                                             new Dictionary<string, object>() {
                                                        {"id","ddlDepartureSecurityId"},
                                                        { "class","form-control form-select js-example-disabled-results"}
                                                 })
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label class="col-sm-4 col-form-label">Security Signature</label>
                                            <div class="col-sm-8">
                                                <img id="DepartureSecuritySignImg" src="~/Content/AdminTemplateAssets/images/default-image.jpg" alt="Security Signature" width="200" height="100">
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label class="col-sm-4 col-form-label">
                                                Security Remarks
                                            </label>
                                            <div class="col-sm-8">
                                                @Html.TextAreaFor(m => m.DepartureSecurityRemark, new Dictionary<string, object>() {
                                             {"id","txtDepartureSecurityRemark"},
                                             {"class","form-control"},
                                                {"autocomplete","off"},
                                             {"placeholder","Enter Security Remark"}
                                             })
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label class="col-sm-4 col-form-label">Verify Status</label>
                                            <div class="col-sm-8">
                                                @Html.CheckBoxFor(m => m.DepartureVerifyStatus,new { @class="chk"})
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <div class="col-sm-8">
                                                <input type="submit" class="btn btn-round btn-inverse m-2" id="confirmok" value="Save" onclick="return confirm('Are You sure you want to save data?')" />
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>

                        }
                        //else if (Model.DepartureVerifyStatus == "1" && Model.ArrivalVerifyStatus == null || Model.DepartureVerifyStatus == "1" && Model.ArrivalVerifyStatus == "")
                        else if (Model.DepartureVerifyStatus == true && Model.ArrivalVerifyStatus == false)
                        {
                            <!--Dep ReadOnly-->
                            <div class="col-md-6">
                                <div class="card-block">

                                    @*@Html.HiddenFor(m => m.DepartureVerifyStatus)*@
                                    @*@Html.HiddenFor(m => m.ArrivalVerifyStatus)*@
                                    @Html.HiddenFor(m => m.GatePassId)
                                    <h4 class="sub-title">Departure Details</h4>
                                    <div class="form-group row">
                                        <label class="col-sm-4 col-form-label">
                                            Departure Date and Time
                                        </label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control" value="@item.DepartureDateTime" readonly="">
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-sm-4 col-form-label">Start KM</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control" value="@decimal.Parse(item.StartKm.ToString()).ToString("0.0")" readonly="">
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-sm-4 col-form-label">Security Officer Name</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control" value="@item.DepartureSecurityName" readonly="">
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-sm-4 col-form-label">Security Signature</label>
                                        <div class="col-sm-8">
                                            <img id="DepartureSecuritySignImg" src="~/@item.DepartureSecuritySignature" alt="Security Signature" width="200" height="100">
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-sm-4 col-form-label">
                                            Security Remarks
                                        </label>
                                        <div class="col-sm-8">
                                            @*<textarea class="form-control" value="@item.DepartureSecurityRemark" readonly=""></textarea>*@
                                            @Html.TextAreaFor(m => item.DepartureSecurityRemark, new Dictionary<string, object>() {
                                           {"id","txtDepartureSecurityRemark"},
                                           {"class","form-control"},
                                              {"autocomplete","off"},
                                           {"readonly","" }
                                           })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label class="col-sm-4 col-form-label">Verify Status</label>
                                        <div class="col-sm-8">
                                            @Html.CheckBoxFor(m => m.DepartureVerifyStatus, new { disabled = "disabled", @class = "chk" })
                                        </div>
                                    </div>

                                </div>
                            </div>
                            <!---->
                            <div class="col-md-6">
                                <div class="card-block">
                                    @using (Html.BeginForm("AddSecurityGatePass", "SecurityDepartment", FormMethod.Post))
                                    {
                                        @Html.AntiForgeryToken();

                                        @Html.HiddenFor(m => m.DepartureVerifyStatus)
                                        @*@Html.HiddenFor(m => m.ArrivalVerifyStatus)*@
                                        @Html.HiddenFor(m => m.GatePassId)
                                        <h4 class="sub-title">Arrival Details</h4>
                                        <div class="form-group row">
                                            <label class="col-sm-4 col-form-label">
                                                Arrival Date and Time
                                                @Html.ValidationMessageFor(m => m.ArrivalDateTime, "", new { @class = "text-danger" })
                                            </label>
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.ArrivalDateTime, new Dictionary<string, object>() {
                                            {"id","txtArrivalDateTime"},
                                            {"class","form-control datetimepicker"},
                                               {"autocomplete","off"},
                                            {"required","required"},
                                            {"placeholder","Enter Arrival Date Time"}
                                            })
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            <label class="col-sm-4 col-form-label">
                                                End km
                                                @Html.ValidationMessageFor(m => m.EndKm, "", new { @class = "text-danger" })
                                            </label>
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(m => m.EndKm, new Dictionary<string, object>() {
                                            {"id","txtEndKm"},
                                            {"class","form-control"},
                                               {"autocomplete","off"},
                                            {"required","required"},
                                            {"placeholder","Enter End Km"}
                                            })
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label class="col-sm-4 col-form-label">Security Officer Name</label>
                                            <div class="col-sm-8">
                                                @Html.DropDownListFor(m => m.ArrivalSecurityId, new SelectList(Model.SecurityMasterList.OrderBy(m => m.SecurityName), "SecurityId", "SecurityName"), "Select Security",
                                        new Dictionary<string, object>() {
                                                      {"id","ddlArrivalSecurityId"},
                                                      { "class","form-control form-select js-example-disabled-results"}
                                            })
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label class="col-sm-4 col-form-label">Security Signature</label>
                                            <div class="col-sm-8">
                                                <img id="ArrivalSecuritySignImg" src="~/Content/AdminTemplateAssets/images/default-image.jpg" alt="Security Signature" width="200" height="100">
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label class="col-sm-4 col-form-label">
                                                Security Remarks
                                            </label>
                                            <div class="col-sm-8">
                                                @Html.TextAreaFor(m => m.ArrivalSecurityRemark, new Dictionary<string, object>() {
                                            {"id","txtArrivalSecurityRemark"},
                                            {"class","form-control"},
                                               {"autocomplete","off"},
                                            {"placeholder","Enter Security Remark"}
                                            })
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label class="col-sm-4 col-form-label">Verify Status</label>
                                            <div class="col-sm-8">
                                                @Html.CheckBoxFor(m => m.ArrivalVerifyStatus, new { @class = "chk" })
                                            </div>
                                        </div>
                                        <div class="form-group row float-right">
                                            <div class="col-sm-8 ">
                                                <input type="submit" class="btn btn-round btn-inverse m-2" id="confirmok" value="Save" onclick="return confirm('Are You sure you want to save data?')" />
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        }

                    </div>

                }
            </div>
        </div>
    </div>
</div>

<script>
     $(document).ready(function() {
        $('#ddlArrivalSecurityId').change(function() {
            var selectedSecurityId = $(this).val(); // Get the selected security ID

            var url = "@System.Configuration.ConfigurationManager.AppSettings["myKey"]" + "/SecurityDepartment/SecuritySignatureJson";
            $.ajax({
                url: url,
                type: "POST",
                datatype: "json",
                data: { SecurityId: selectedSecurityId },
                success: function (response) {
                    debugger
                    var signatureUrl = "../../"+response.signatureUrl;

                    $('#ArrivalSecuritySignImg').attr('src', signatureUrl);
                },
                error: function() {
                    console.log('Error fetching signature');
                }
            });
        });
        $('#ddlDepartureSecurityId').change(function() {
        var selectedSecurityId = $(this).val(); // Get the selected security ID

            var url = "@System.Configuration.ConfigurationManager.AppSettings["myKey"]" + "/SecurityDepartment/SecuritySignatureJson";
            $.ajax({
                url: url,
                type: "POST",
                datatype: "json",
                data: { SecurityId: selectedSecurityId },
                success: function (response) {
                    debugger
                    var signatureUrl = "../../" +response.signatureUrl;

                    $('#DepartureSecuritySignImg').attr('src', signatureUrl);
                },
                error: function() {
                    console.log('Error fetching signature');
                }
            });
        });
    });
</script>