@model BanasVehicleTrackViewModel.RoleModuleViewModel
@{
    ViewBag.Title = "Role Module Integration";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="page-wrapper">
    <div class="page-header">
        <div class="row align-items-end">
            <div class="col-lg-12">
                <div class="float-left">
                    <h3><i class="ti-control-forward ForwardIcon"> </i>Role Module Integrations</h3>
                </div>
                <div class="float-right">
                    <a class="btn btn-outline-primary btn-round" href="@Url.Action("ViewInteRoleModule","UserManagement")">
                        <i class="fa fa-eye mx-2"></i>View Role Module Integrations
                    </a>
                </div>
            </div>
        </div>
    </div>

    <div class="page-body">
        <div class="row">
            <div class="col-sm-12">
                <div class="card">
                    <div class="card-block">
                        @using (Html.BeginForm("AddInteRoleModule", "UserManagement", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken();

                            @Html.HiddenFor(m => m.Action)
                            @Html.HiddenFor(m => m.InteId, new { id = "txtInteId" })
                        <div class="form-group row">
                            <div class="col-sm-3">
                                <label class="col-form-label">Role Name</label>
                                @Html.ValidationMessageFor(m => m.RoleId, "", new { @class = "text-danger" })
                                @Html.DropDownListFor(m => m.RoleId, new SelectList(Model.RoleList.OrderBy(m=>m.RoleName), "RoleId", "RoleName"), "Select Role",
                                           new Dictionary<string, object>() {
                                               {"id","ddlRole"},
                                               { "class","form-control form-select js-example-disabled-results"}
                                               })
                            </div>
                            <div class="col-sm-3">
                                <label class="col-form-label">Module Name</label>
                                @Html.ValidationMessageFor(m => m.ModuleId, "", new { @class = "text-danger" })
                                @Html.DropDownListFor(m => m.ModuleId, new SelectList(Model.ModuleList.OrderBy(m => m.ModuleName), "ModuleId", "ModuleName"), "Select Module",
                                           new Dictionary<string, object>() {
                                               {"id","ddlModule"},
                                               { "class","form-control form-select js-example-disabled-results"},
                                                 { "onchange", "javascript:GetPage(this.value)" }
                                               })
                            </div>
                            <div class="col-sm-3">
                                <label class="col-form-label">Page Name</label>
                                @Html.ValidationMessageFor(m => m.MPInteId, "", new { @class = "text-danger" })
                                @Html.DropDownListFor(m => m.MPInteId, new SelectList(Model.PageList.OrderBy(m => m.PageName), "PageId", "PageName"), "Select Page",
                                           new Dictionary<string, object>() {
                                               {"id","ddlPage"},
                                               { "class","form-control form-select js-example-disabled-results"}
                                               })
                            </div>
                            <div class="col-sm-3">
                                <label class="col-form-label">IsActive</label><br />

                                @Html.ValidationMessageFor(m => m.IsActive, "", new { @class = "text-danger" })
                                @Html.DropDownListFor(x => x.IsActive, new List<SelectListItem>
                               {
                                   new SelectListItem{ Text="Enable", Value = "true",Selected=true },
                                   new SelectListItem{ Text="Disable", Value = "false" }
                                }, new { @class = "form-control form-select js-example-disabled-results", @id = "IsActive" })
                            </div>
                            <div class="col-sm-3 mt-2">
                                <label class="col-form-label">
                                    View Right
                                    @Html.CheckBoxFor(model => model.ViewRight)
                                </label>
                            </div>
                            <div class="col-sm-3 mt-2">
                                <label class="col-form-label">
                                    Insert Right
                                    @Html.CheckBoxFor(model => model.InsertRight)
                                </label>
                            </div>
                            <div class="col-sm-3 mt-2">
                                <label class="col-form-label">
                                    Update Right
                                    @Html.CheckBoxFor(model => model.UpdateRight)
                                </label>
                            </div>
                            <div class="col-sm-3 mt-2">
                                <label class="col-form-label">
                                    Delete Right
                                    @Html.CheckBoxFor(model => model.DeleteRight)
                                </label>
                            </div>
                            <div class="col-lg-3">
                                <div class="mt-4">
                                    <input type="submit" class="btn btn-round btn-inverse m-2" id="confirmok" value="Save" onclick="return confirm('Are You sure you want to save data?')" />
                                </div>
                            </div>
                        </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
        var re = '@Model.Action';
        if (re == 'update') {
            $('#ddlRole').attr('disabled', 'true');
            $('#ddlModule').attr('disabled', 'true');
            $('#ddlPage').attr('disabled', 'true');
        }
</script>
<script>
        function GetPage(_Moduleid) {
            $("#ddlPage option").remove();
            if (_Moduleid == "") {
                _Moduleid = 0;
            }
            if (_Moduleid != 0) {
                var url = "@System.Configuration.ConfigurationManager.AppSettings["myKey"]" + "/UserManagement/SelectPageJson";
                $.ajax({
                    url: url,
                    data: { Moduleid: _Moduleid },
                    cache: false,
                    type: "POST",
                    datatype: "json",
                    traditional: true,
                    success: function (data) {

                        var page = "<select id='ddlPage'>";

                        page = page + '<option value="0"> All</option>';

                        for (var i = 0; i < data.PageList.length; i++) {

                            page = page + '<option value=' + data.PageList[i].PageId + '>' + data.PageList[i].PageName + '</option>';

                        }
                        page = page + '</select>';
                        $('#ddlPage').html(page);
                    },
                    error: function (reponse) {
                        var page = "<select id='ddlPage'>";
                        page = page + '</select>';
                        $('#ddlPage').html(page);
                    }
                });
            }
            else {
                var page = "<select id='ddlPage'>";
                page = page + '</select>';
                $('#ddlPage').html(page);
            }
        }
</script>